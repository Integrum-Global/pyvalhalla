[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm>=6.2",
    "setuptools_scm_git_archive",
    "pybind11>=2.9.0",
]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 105
exclude = '''
/(
    \\..*
  | dist
  | wheelhouse
  | .*build
  | __pycache__
)/
'''

[tool.cibuildwheel]
test-command = "python -c \"from valhalla import Actor\""
# find out current defaults: cibuildwheel --print-build-identifiers --platform linux
build = "cp*"
skip = "*musllinux*"
archs = "native"
manylinux-x86_64-image = "ghcr.io/gis-ops/manylinux:valhalla_py"

[tool.cibuildwheel.linux]
# need to install conan here bcs docker container
before-all = """
pip install conan
conan config set "storage.path={package}/conan_data"
conan install --install-folder conan_build --remote conancenter {package}/lib/valhalla/conanfile.txt
"""

[tool.cibuildwheel.macos]
before-all = """
pip install conan
conan config set "storage.path={package}/conan_data"
conan install --install-folder conan_build --remote conancenter {package}/lib/valhalla/conanfile.txt
"""

[tool.cibuildwheel.windows]
before-all = """\
pip install conan delvehweel && \
conan profile new default --detect && \
conan profile update "settings.compiler=Visual Studio" default && \
conan profile update "settings.compiler.version=16" default && \
conan config set "storage.path={package}/conan_data" && \
conan install --install-folder conan_build --remote conancenter {package}/lib/valhalla/conanfile.txt
"""

repair-wheel-command = "delvewheel repair --add-path lib/windows/lib {wheel}"
