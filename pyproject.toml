[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm>=6.2",
    "setuptools_scm_git_archive",
    "pybind11>=2.9.0",
]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 105
exclude = '''
/(
    \\..*
  | dist
  | wheelhouse
  | .*build
  | __pycache__
)/
'''

[tool.cibuildwheel]
test-command = 'python -c "from valhalla import Actor"'
# find out current defaults: cibuildwheel --print-build-identifiers --platform linux
build = "cp*"
skip = "*musllinux*"
archs = "native"
manylinux-x86_64-image = "ghcr.io/gis-ops/manylinux:valhalla_py"

[tool.cibuildwheel.linux]
# need to install conan here bcs docker container
before-all = """
pip install conan
conan config set "storage.path={package}/conan_data"
conan install --install-folder conan_build --remote conancenter {package}/lib/vahalla/conanfile.txt
cmake -B {package}/lib/valhalla/build -S {package}/lib/valhalla -DENABLE_CCACHE=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_BENCHMARKS=OFF -DENABLE_PYTHON_BINDINGS=OFF -DENABLE_TESTS=OFF -DENABLE_TOOLS=OFF -DENABLE_SERVICES=OFF -DENABLE_HTTP=OFF -DENABLE_CCACHE=OFF -DCMAKE_BUILD_TYPE=Release -DGEOS_INCLUDE_DIR=/usr/include/geos -DGEOS_LIB=/usr/lib/x86_64-linux-gnu/libgeos-3.5.1.so -DGEOS_C_LIB=/usr/lib/x86_64-linux-gnu/libgeos_c.so.1.9.1
cmake --build {package}/lib/valhalla/build -- -j$(nproc)
"""

[tool.cibuildwheel.macos]
before-all = """
pip install conan
conan config set "storage.path={package}/conan_data"
conan install --install-folder conan_build --remote conancenter {package}/lib/vahalla/conanfile.txt
brew install protobuf cmake libtool libspatialite pkg-config luajit curl lz4 spatialite-tools unzip
cmake -B {package}/lib/valhalla/build -S {package}/lib/valhalla -DENABLE_CCACHE=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_BENCHMARKS=OFF -DENABLE_PYTHON_BINDINGS=OFF -DENABLE_TESTS=OFF -DENABLE_TOOLS=OFF -DENABLE_SERVICES=OFF -DENABLE_HTTP=OFF -DENABLE_CCACHE=OFF -DCMAKE_BUILD_TYPE=Release
cmake --build {package}/lib/valhalla/build -- -j$(nproc)
"""

[tool.cibuildwheel.windows]
before-all = [
    "pip install conan",
    "conan profile new default --detect",
    "conan profile update "settings.compiler=Visual Studio" default",
    "conan profile update "settings.compiler.version=16" default",
    "conan config set "storage.path={package}/conan_data"",
    "conan install --install-folder conan_build --remote conancenter {package}/lib/vahalla/conanfile.txt",
    "vcpkg.exe install --triplet x64-windows "@lib/valhalla/.vcpkg_deps.txt"",
    "cmake.exe -Slib/valhalla -Blib/valhalla/build -DENABLE_CCACHE=OFF -DBUILD_SHARED_LIBS=OFF -DENABLE_BENCHMARKS=OFF -DENABLE_PYTHON_BINDINGS=ON -DENABLE_TESTS=OFF -DENABLE_TOOLS=OFF -DENABLE_SERVICES=OFF -DENABLE_HTTP=OFF -DENABLE_CCACHE=OFF -DCMAKE_BUILD_TYPE=Release -DLUA_INCLUDE_DIR=%VCPKG_INSTALLATION_ROOT%\\installed\\x64-windows\\include\\luajit -DLUA_LIBRARIES=%VCPKG_INSTALLATION_ROOT%\\installed\\x64-windows\\lib\\lua51.lib -DCMAKE_TOOLCHAIN_FILE=%VCPKG_INSTALLATION_ROOT%\\scripts\\buildsystems\\vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows -G "Visual Studio 16 2019" -T host=x64 -A x64",
    "cmake --build lib/valhalla/build --config Release -j 8",
]
